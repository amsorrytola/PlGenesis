### elizaOS Environment Variables ###
# To get started, copy this file to .env, or make a .env and add the settings you'd like to override
# Please read the comments for each of the configurations

# The only thing you ABSOLUTELY NEED to get up and running is one of the model provider keys, 
# i.e. OPENAI_API_KEY or ANTHROPIC_API_KEY, or setup the local-ai plugin
# Everything else is optional, and most settings and secrets can be configured in your agent or through the GUI
# For multi-agent, each agent will need keys for the various services it is connected to
# You can use the .env or environment variables generally for shared keys, such as to model providers, 
# database, etc, with scoped keys for services such as Telegram, Discord, etc

### MODEL PROVIDER KEYS ###
# Eliza is compatible with a wide array of model providers. Many have OpenAI compatible APIs, 
# and you can use them by overriding the base URL

# NOTE: You will need a provider that provides embeddings. So even if you use Claude, you will 
# need to get embeddings using another provider, for example openai or our local-ai plugin

# OpenAI Configuration
# Use this to override the openai endpoint, for example for using together.ai, fireworks or other providers
OPENAI_BASE_URL=https://openrouter.ai/api/v1

# Anthropic Configuration
# By default in most of our starter kits, Anthropic will take precedence over OpenAI in handling requests
# Anthropic does not handle embeddings, so you may wish to use OpenAI for that, even while Claude is handling text generation
ANTHROPIC_API_KEY=

# Cloudflare AI
CLOUDFLARE_GW_ENABLED=
CLOUDFLARE_AI_ACCOUNT_ID=
CLOUDFLARE_AI_GATEWAY_ID=

### LOCAL AI CONFIGURATION ###
USE_LOCAL_AI=
USE_STUDIOLM_TEXT_MODELS=
USE_OLLAMA_TEXT_MODELS=

# Ollama Configuration
OLLAMA_API_ENDPOINT=
OLLAMA_MODEL=
USE_OLLAMA_EMBEDDING=
OLLAMA_EMBEDDING_MODEL=
OLLAMA_SMALL_MODEL=
OLLAMA_MEDIUM_MODEL=
OLLAMA_LARGE_MODEL=

# StudioLM Configuration
STUDIOLM_SERVER_URL=
STUDIOLM_SMALL_MODEL=
STUDIOLM_MEDIUM_MODEL=
STUDIOLM_EMBEDDING_MODEL=

### DATABASE ###
# By default, Eliza will use a local pglite instance
# If you fill out POSTGRES_URL, the agent will connect to your postgres instance instead of using the local path

# You can override the pglite data directory

# Fill this out if you want to use Postgres
POSTGRES_URL=

### LOGGING CONFIGURATION ###
# Logging Configuration (supported: fatal, error, warn, info, debug, trace | default: info)
LOG_LEVEL=

# Sentry Configuration
SENTRY_LOGGING=true
SENTRY_DSN=
SENTRY_ENVIRONMENT=
SENTRY_TRACES_SAMPLE_RATE=
SENTRY_SEND_DEFAULT_PII=

### API KEYS ###
# Many services require API keys to function
# Most plugins will indicate what is needed in their README.md and throw helpful errors if they are missing
BIRDEYE_API_KEY=
JUPITER_API_KEY=
HELIUS_API_KEY=
COINMARKETCAP_API_KEY=
ZEROEX_API_KEY=
COINGECKO_API_KEY=

### SINGLE AGENT VARIABLES ###
# If you are running multiple agents, you will need to configure these variables in the agent secrets 
# (available in the GUI) OR you can namespace the secrets and connect them up in your character definition

# Example: 
# settings: {
#   process.env.COMMUNITY_MANAGER_DISCORD_API_TOKEN
# }

# Note: See below for multi-agent examples

# Discord Configuration
DISCORD_APPLICATION_ID=
DISCORD_API_TOKEN=

# Telegram Configuration
TELEGRAM_BOT_TOKEN=

# ===============================================================================
# TWITTER PLUGIN CONFIGURATION
# ===============================================================================

# Required Twitter API Credentials
TWITTER_API_KEY=
TWITTER_API_SECRET_KEY=
TWITTER_ACCESS_TOKEN=
TWITTER_ACCESS_TOKEN_SECRET=

# Target Users and Search Configuration
TWITTER_TARGET_USERS=
TWITTER_RETRY_LIMIT=5
TWITTER_POLL_INTERVAL=120
TWITTER_SEARCH_ENABLE=true
TWITTER_DRY_RUN=false

# Autonomous Posting Configuration
TWITTER_POST_ENABLE=false
TWITTER_POST_INTERVAL_MIN=90
TWITTER_POST_INTERVAL_MAX=180
TWITTER_POST_IMMEDIATELY=false
TWITTER_POST_INTERVAL_VARIANCE=0.2

# Interaction Configuration
TWITTER_INTERACTION_INTERVAL_MIN=15
TWITTER_INTERACTION_INTERVAL_MAX=30
TWITTER_INTERACTION_INTERVAL_VARIANCE=0.3

# Timeline Algorithm Configuration
TWITTER_TIMELINE_ALGORITHM=weighted
TWITTER_TIMELINE_USER_BASED_WEIGHT=3
TWITTER_TIMELINE_TIME_BASED_WEIGHT=2
TWITTER_TIMELINE_RELEVANCE_WEIGHT=5

# Tweet and Processing Limits
TWITTER_MAX_TWEET_LENGTH=4000
TWITTER_MAX_INTERACTIONS_PER_RUN=10

# Response Behavior
TWITTER_DM_ONLY=false
TWITTER_ENABLE_ACTION_PROCESSING=false
TWITTER_ACTION_INTERVAL=240
TWITTER_AUTO_RESPOND_MENTIONS=true
TWITTER_AUTO_RESPOND_REPLIES=true

# EVM Configuration
EVM_PRIVATE_KEY=
EVM_CHAINS=mainnet,sepolia,base,arbitrum,polygon
EVM_PROVIDER_URL=

# Solana Configuration
SOLANA_PUBLIC_KEY=
SOLANA_PRIVATE_KEY=

### MULTI-AGENT CONFIGURATION ###
# Settings for The Org
# The Org is an example of a multi-agent swarm
# Available here: https://github.com/elizaOS/the-org
# This is an example of how environment variables can be scoped per-project

# Community Manager
COMMUNITY_MANAGER_DISCORD_APPLICATION_ID=
COMMUNITY_MANAGER_DISCORD_API_TOKEN=

# Social Media Manager
SOCIAL_MEDIA_MANAGER_DISCORD_APPLICATION_ID=
SOCIAL_MEDIA_MANAGER_DISCORD_API_TOKEN=

# Liaison
LIAISON_DISCORD_APPLICATION_ID=
LIAISON_DISCORD_API_TOKEN=

# Project Manager
PROJECT_MANAGER_DISCORD_APPLICATION_ID=
PROJECT_MANAGER_DISCORD_API_TOKEN=

# Developer Relations
DEV_REL_DISCORD_APPLICATION_ID=
DEV_REL_DISCORD_API_TOKEN=
DEVREL_IMPORT_KNOWLEDGE=true

# Investment Manager
INVESTMENT_MANAGER_DISCORD_APPLICATION_ID=
INVESTMENT_MANAGER_DISCORD_API_TOKEN=


### Additional Environment Variables from Runtime ###
# Variables found in process.env that were not in the template
SHELL=/bin/bash
COLORTERM=truecolor
NVM_INC=/home/pushkar/.nvm/versions/node/v23.1.0/include/node
WSL2_GUI_APPS_ENABLED=1
TERM_PROGRAM_VERSION=1.2.1
WSL_DISTRO_NAME=Ubuntu
HOMEBREW_PREFIX=/home/linuxbrew/.linuxbrew
NAME=Cursor
PWD=/home/pushkar/near
LOGNAME=pushkar
VSCODE_GIT_ASKPASS_NODE=/home/pushkar/.cursor-server/bin/031e7e0ff1e2eda9c1a0f5df67d44053b059c5d0/node
HOME=/home/pushkar
LANG=C.UTF-8
WSL_INTEROP=/run/WSL/1098_interop
LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=00:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.avif=01;35:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:*~=00;90:*#=00;90:*.bak=00;90:*.crdownload=00;90:*.dpkg-dist=00;90:*.dpkg-new=00;90:*.dpkg-old=00;90:*.dpkg-tmp=00;90:*.old=00;90:*.orig=00;90:*.part=00;90:*.rej=00;90:*.rpmnew=00;90:*.rpmorig=00;90:*.rpmsave=00;90:*.swp=00;90:*.tmp=00;90:*.ucf-dist=00;90:*.ucf-new=00;90:*.ucf-old=00;90:
WAYLAND_DISPLAY=wayland-0
GIT_ASKPASS=/home/pushkar/.cursor-server/bin/031e7e0ff1e2eda9c1a0f5df67d44053b059c5d0/extensions/git/dist/askpass.sh
INFOPATH=/home/linuxbrew/.linuxbrew/share/info:/home/linuxbrew/.linuxbrew/share/info:
NVM_DIR=/home/pushkar/.nvm
LESSCLOSE=/usr/bin/lesspipe %s %s
TERM=xterm-256color
LESSOPEN=| /usr/bin/lesspipe %s
USER=pushkar
VSCODE_GIT_IPC_HANDLE=/run/user/1000/vscode-git-e13a98b66d.sock
HOMEBREW_CELLAR=/home/linuxbrew/.linuxbrew/Cellar
DISPLAY=:0
SHLVL=2
HOMEBREW_REPOSITORY=/home/linuxbrew/.linuxbrew/Homebrew
XDG_RUNTIME_DIR=/run/user/1000/
WSLENV=ELECTRON_RUN_AS_NODE/w:

BUN_INSTALL=/home/pushkar/.bun
VSCODE_GIT_ASKPASS_MAIN=/home/pushkar/.cursor-server/bin/031e7e0ff1e2eda9c1a0f5df67d44053b059c5d0/extensions/git/dist/askpass-main.js
XDG_DATA_DIRS=/usr/local/share:/usr/share:/var/lib/snapd/desktop
PATH=/home/linuxbrew/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/sbin:/home/pushkar/.bun/bin:/home/pushkar/.cursor-server/bin/031e7e0ff1e2eda9c1a0f5df67d44053b059c5d0/bin/remote-cli:/home/pushkar/.local/share/solana/install/active_release/bin:/home/pushkar/.deno/bin:/home/linuxbrew/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/sbin:/home/pushkar/.bun/bin:/home/pushkar/.nvm/versions/node/v23.1.0/bin:/home/pushkar/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/Python312/Scripts/:/mnt/c/Python312/:/mnt/c/Program Files (x86)/Common Files/Intel/Shared Libraries/redist/intel64/compiler:/mnt/c/Windows/system32:/mnt/c/Windows:/mnt/c/Windows/System32/Wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/MinGW/bin:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/nodejs/:/mnt/c/Program Files/MongoDB/Server/7.0/bin:/mnt/c/Program Files/Git/cmd:/mnt/c/Program Files/Docker/Docker/resources/bin:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Program Files/Go/bin:/mnt/c/Users/pushk/AppData/Local/Programs/cursor/resources/app/bin:/mnt/c/Users/pushk/.cargo/bin:/mnt/c/Users/pushk/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/pushk/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Users/pushk/AppData/Roaming/npm:/mnt/c/Users/pushk/go/bin:/mnt/c/Users/pushk/AppData/Local/Programs/cursor/resources/app/bin:/mnt/c/Users/pushk/AppData/Local/Programs/Ollama:/snap/bin:/home/pushkar/.risc0/bin:/home/pushkar/.foundry/bin:/home/pushkar/.risc0/bin:/home/pushkar/.foundry/bin
DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus
NVM_BIN=/home/pushkar/.nvm/versions/node/v23.1.0/bin
HOSTTYPE=x86_64
PULSE_SERVER=unix:/mnt/wslg/PulseServer
TERM_PROGRAM=vscode
VSCODE_IPC_HOOK_CLI=/run/user/1000/vscode-ipc-c1dc2102-d92f-45a3-9719-ba34965c443b.sock
_=/home/pushkar/.bun/bin/elizaos
NODE_OPTIONS=--no-deprecation
NODE_NO_WARNINGS=1
PGLITE_DATA_DIR=/home/pushkar/near/ai-agent/.eliza/.elizadb
OPENAI_API_KEY=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

NEAR_ACCOUNT_ID="0xpushkar.testnet"
NEAR_PRIVATE_KEY="2UJHCpdoHHB1mt8198B25rcJYJHbAXFyN77pWvkLj9P9nWvfQCMm6jT64XaTMBbtZ1yx4icrLNF6xxbxgAQJ3Utp"
MPC_PATH="ethereum,1"
MPC_CHAIN="ethereum"
MPC_CONTRACT_ID="v1.signer-prod.testnet"
MPC_PUBLIC_KEY="secp256k1:4NfTiv3UsGahebgTaHyD9vF8KYKMBnfd6kh94mK6xv8fGBiJB8TBtFMP5WWXz6B89Ac1fbpzPwAvoyQebemHFwx3"